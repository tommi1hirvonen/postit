@page "/posts/{UserId}"
@inject HttpClient Http

<PageTitle>Bloggers</PageTitle>

<h1>@user?.Name blog posts</h1>

@if (posts is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row mt-3">
        <div class="col">
            @foreach (var post in posts)
            {
                <div class="row mb-4">
                    <div class="col">
                        <div class="card @(post.Id == postId ? "shadow" : null)">
                            <div class="card-body">
                                <h5 class="card-title mb-3">@post.Title</h5>
                                <p>@post.Body</p>
                                <a href="javascript:void()" class="card-link" @onclick="() => ShowCommentsAsync(post.Id)">Show comments</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    
        @if (comments is not null)
        {
            <div class="col border-start">
                <div class="row mb-4">
                    <div class="col">
                        <h5>Comments</h5>
                    </div>
                    <div class="col-auto text-end">
                        <button type="button" class="btn-close" aria-label="Close" @onclick="HideComments"></button>
                    </div>
                </div>
                
                @foreach (var comment in comments)
                {
                    <div class="row mb-4">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">@comment.Name</h5>
                                <h6 class="card-subtitle mb-2 text-body-secondary">@comment.Email</h6>
                                <p>@comment.Body</p>
                            </div>
                        </div>
                    </div>
                </div>
                }
            </div>
        }
    </div>
}

@code {
    [Parameter] public string? UserId { get; set; }

    private User? user;

    private Post[]? posts;

    private Comment[]? comments;

    private string? postId;

    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<User>($"api/Users/{UserId}");
        posts = await Http.GetFromJsonAsync<Post[]>($"api/Posts/{UserId}");
    }

    private async Task ShowCommentsAsync(string postId)
    {
        this.postId = postId;
        comments = await Http.GetFromJsonAsync<Comment[]>($"api/Comments/{postId}");
    }

    private void HideComments() => (postId, comments) = (null, null);
}
