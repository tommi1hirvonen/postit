@page "/bloggers"

@attribute [Authorize(Roles = "datareader")]

@inject IHttpClientFactory HttpClientFactory

<PageTitle>Bloggers</PageTitle>

<h1>Bloggers</h1>

<table class="table mt-3">
    <thead>
        <tr>
            <th>Username</th>
            <th>Name</th>
            <th>Email</th>
        </tr>
    </thead>
    <tbody>
        @if (users is null)
        {
            <tr>
                <td colspan="3">
                    <em>Loading...</em>
                </td>
            </tr>
        }
        else if (users.Length == 0)
        {
            <tr>
                <td colspan="3">
                    No users
                </td>
            </tr>
        }
        else
        {
            foreach (var user in users)
            {
                <tr>
                    <td>
                        <a href="bloggers/@user.Id">
                            @user.Username
                        </a>
                    </td>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private User[]? users;

    protected override async Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient("host");
        users = await client.GetFromJsonAsync<User[]>("api/Users");
    }
}
